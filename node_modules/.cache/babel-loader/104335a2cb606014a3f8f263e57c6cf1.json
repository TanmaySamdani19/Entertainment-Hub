{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanma\\\\Desktop\\\\netflix-clone\\\\src\\\\Row.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Row(_ref) {\n  _s();\n\n  let {\n    title,\n    fetchUrl\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {//if [], run once when the row loads, and dont run again \n  }, [movies]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Row, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["C:/Users/tanma/Desktop/netflix-clone/src/Row.js"],"names":["React","useEffect","useState","axios","Row","title","fetchUrl","movies","setMovies"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,GAAT,OAAgC;AAAA;;AAAA,MAAnB;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAmB;AAC5B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM,CACZ;AACH,GAFQ,EAEN,CAACM,MAAD,CAFM,CAAT;AAIF,sBAAO;AAAA,2BACH;AAAA,gBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,UAAP;AAMD;;GAbQD,G;;KAAAA,G;AAeT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Row({title, fetchUrl}) {\r\n    const [movies, setMovies] = useState([]);\r\n\r\n    useEffect(() => {\r\n        //if [], run once when the row loads, and dont run again \r\n    }, [movies]);\r\n\r\n  return <div>\r\n      <h2>{title}</h2>\r\n      {/* title */}\r\n\r\n      {/* container -> posters */}\r\n  </div>;\r\n}\r\n\r\nexport default Row;\r\n"]},"metadata":{},"sourceType":"module"}