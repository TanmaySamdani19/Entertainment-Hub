{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tanma\\\\Desktop\\\\netflix-clone\\\\src\\\\Row.js\",\n    _s = $RefreshSig$();\n\nimport axios from './axios';\nimport React, { useEffect, useState } from 'react'; //import './Row.css'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Row(_ref) {\n  _s();\n\n  let {\n    title,\n    fetchUrl\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  const base_url = 'https://image.tmdb.org/t/p/original';\n  useEffect(() => {\n    //if [], run once when row loads and dont run again\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n  console.log(movies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row__posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"row__poster\",\n        src: `${base_url}${movie.poster_path}`,\n        alt: movie.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Row, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["C:/Users/tanma/Desktop/netflix-clone/src/Row.js"],"names":["axios","React","useEffect","useState","Row","title","fetchUrl","movies","setMovies","base_url","fetchData","request","get","data","results","console","log","map","movie","poster_path","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;;;;AAEA,SAASC,GAAT,OAAgC;AAAA;;AAAA,MAAnB;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAmB;AAC9B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMM,QAAQ,GAAG,qCAAjB;AAGAP,EAAAA,SAAS,CAAC,MAAM;AACZ;AACF,mBAAeQ,SAAf,GAA2B;AACzB,YAAMC,OAAO,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAUN,QAAV,CAAtB;AACAE,MAAAA,SAAS,CAACG,OAAO,CAACE,IAAR,CAAaC,OAAd,CAAT;AACA,aAAOH,OAAP;AACD;;AACDD,IAAAA,SAAS;AACV,GARQ,EAQN,CAACJ,QAAD,CARM,CAAT;AAUAS,EAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACH;AAAA,gBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,YADG,eAIH;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBAGKE,MAAM,CAACU,GAAP,CAAWC,KAAK,iBACb;AAAK,QAAA,SAAS,EAAC,aAAf;AACA,QAAA,GAAG,EAAG,GAAET,QAAS,GAAES,KAAK,CAACC,WAAY,EADrC;AACwC,QAAA,GAAG,EAAID,KAAK,CAACE;AADrD;AAAA;AAAA;AAAA;AAAA,cADH;AAHL;AAAA;AAAA;AAAA;AAAA,YAJG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAcD;;GAhCQhB,G;;KAAAA,G;AAkCT,eAAeA,GAAf","sourcesContent":["import axios from './axios'\r\nimport React, { useEffect, useState } from 'react'\r\n//import './Row.css'\r\n\r\nfunction Row({title, fetchUrl}) {\r\n  const [movies, setMovies] = useState([]);\r\n  \r\n  const base_url = 'https://image.tmdb.org/t/p/original'\r\n\r\n    \r\n  useEffect(() => {\r\n      //if [], run once when row loads and dont run again\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl)\r\n      setMovies(request.data.results)\r\n      return request\r\n    }\r\n    fetchData()\r\n  }, [fetchUrl])\r\n\r\n  console.log(movies)\r\n\r\n  return <div className='row'>\r\n      <h2>{title}</h2>\r\n      {/* title */}\r\n\r\n      <div className='row__posters'>\r\n          {/* several row posters */}\r\n\r\n          {movies.map(movie => (\r\n              <img className='row__poster'\r\n              src={`${base_url}${movie.poster_path}`} alt = {movie.name} />\r\n          ))}\r\n      </div>\r\n      {/* container -> posters */}\r\n  </div>;\r\n}\r\n\r\nexport default Row;\r\n"]},"metadata":{},"sourceType":"module"}